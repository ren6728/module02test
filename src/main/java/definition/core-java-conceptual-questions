Answers: <Google Sheet link>

Please answer the below core-java Questions:

A.
1.What jdk contains or composed of and define each components?
Answer:
The Java Developer's Kit contains a variety of tools and Java development information.
Following is a list of the main components of the JDK:

The Runtime Interpreter
The Compiler
The Applet Viewer
The Debugger
The Class File Disassembler
The Header and Stub File Generator
The Documentation Generator
Applet Demos
API Source Code

The runtime interpreter is the core runtime module for the Java system.

The compiler, applet viewer, debugger, class file disassembler, header
and stub file generator, and documentation generator are the primary
tools used by Java developers.

The applet demos are interesting examples of Java applets, which all come
with complete source code.

2.What is IDE?

Answer:An IDE, or Integrated Development Environment, enables programmers to
consolidate the different aspects of writing a computer program.

IDEs increase programmer productivity by combining common activities of
writing software into a single application: editing source code, building
executables, and debugging.

3.What are the IDEs available in the market to support java?
Eclipse,Intelij,NetBeans,VisualStudio,Jdeveloper,MyEclipse,BlueJ,Jcreator,
DrJava,jGRASP,JSource

4.Explain the entire java life cycle.
In java programming, we can use any text editor to create the high-level
java text file which will be saved as a .java file on the disk. with the
compiler we compile it into a .class file on the disk , this .class file
contains the bytecodes, then it will be loaded into memory by the class
loader,there comes the bytecode verifier confirms the bytecode are valid
and not hostile. Finally,the JVM reads the bytecodes in memory and
translates them into machine code.

5.what is class?
A class is a user defined blueprint or prototype from which objects are
created. It represents the set of properties or methods that are common
to all objects of one type.
6.What is object?
Objects have states and behaviors. Example: A dog has states - color,
name, breed as well as behaviors – wagging the tail, barking, eating.
An object is an instance of a class.
7.What is the entry point of an application?
Java main method
8.Why main is static?
Java main() method is always static, so that compiler can call it without
the creation of an object or before the creation of an object of the class.
In any Java program, the main() method is the starting point from where
compiler starts program execution. So, the compiler needs to call the main()
method.
9.Which class is the superclass of all classes?
Java.lang.Object class is the root or superclass of the class hierarchy,
which is present in java.lang package. All predefined classes and
user-defined classes are the subclasses from Object class.
10.What is difference between path and classpath variables?
The path points to the location of the jre i.e. the java binary files
such as the jvm and necessary libraries. The classpath points to the
classes you developed so that the jvm can find them and load them when
you run your product.
11.What is the difference between an Interface and Abstract class?
Main difference is methods of a Java interface are implicitly abstract
and cannot have implementations. A Java abstract class can have instance
methods that implements a default behavior. ... An abstract class may
contain non-final variables. Members of a Java interface are public
by default.
12.Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
You cannot create an object of abstract class or interface since they
are incomplete class (interface is not even considered as a class.)
What you can do is to implement a subclass of abstract class which,
of course, must not be abstract.
13.what is Access Specifier?
Default – No keyword required
Private
Protected
Public
14.What is OOP ? Define each feature of java OOP.
As the name suggests, Object-Oriented Programming or OOPs refers to
languages that uses objects in programming. Object-oriented programming
aims to implement real-world entities like inheritance, hiding,
polymorphism etc in programming. The main aim of OOP is to bind together
the data and the functions that operate on them so that no other part of
the code can access this data except that function.
1)As the name suggests, Object-Oriented Programming or OOPs refers to
languages that uses objects in programming. Object-oriented programming
aims to implement real-world entities like inheritance, hiding,
polymorphism etc in programming. The main aim of OOP is to bind together
the data and the functions that operate on them so that no other part of
the code can access this data except that function.
Polymorphism in Java are mainly of 2 types:

Overloading in Java
Overriding in Java
2)Inheritance is an important pillar of OOP(Object Oriented Programming).
It is the mechanism in java by which one class is allow to inherit the
features(fields and methods) of another class.
3)Encapsulation is defined as the wrapping up of data under a single unit.
It is the mechanism that binds together code and the data it manipulates.
Another way to think about encapsulation is, it is a protective shield
that prevents the data from being accessed by the code outside this shield.
4)Data Abstraction is the property by virtue of which only the essential
details are displayed to the user.The trivial or the non-essentials units
are not displayed to the user. Ex: A car is viewed as a car rather than
its individual components.
15.What is Java Package and which package is imported by default?
The Java standard libraries include java. lang package by default, which
contains a number of components that are used very commonly in Java programs.
Java is useless without much of the functionality in java. lang , that's
why java. lang is implicitly imported by the compiler for all programs.
16.What is API? Name list of API that you have used so far.
API stands for Application Programming Interface, which is a mechanism that
allows the interaction between two applications using a set of rules.

SOAP (Simple Object Access Protocol):
JSON-RPC:
REST (Representational State Transfer):

17.Does java support multiple inheritance, explain why or why not?
Java doesn’t allow multiple inheritance to avoid the ambiguity caused
by it.
18.What is method overloading and when it happens?
Method Overloading is a feature that allows a class to have more than
one method having the same name, if their argument lists are different.
It is similar to constructor overloading in Java, that allows a class
to have more than one constructor having different argument lists.
19.Explain exceptions in java and how to handle it.
An exception is an unwanted or unexpected event, which occurs during
the execution of a program i.e at run time, that disrupts the normal
flow of the program’s instructions.
Default Exception Handling : Whenever inside a method, if an exception
has occurred, the method creates an Object known as Exception Object
and hands it off to the run-time system(JVM). The exception object
contains name and description of the exception, and current state of
the program where exception has occurred. Creating the Exception Object
and handling it to the run-time system is called throwing an Exception.
20.What is static keyword in java? How it has been used in variables and methods ?
In Java, static keyword is mainly used for memory management. It can be used with
variables, methods, blocks and nested classes. It is a keyword which is
used to share the same variable or method of a given class. Basically, static
is used for a constant variable or a method that is same for every instance of
a class.
21.What is final and how it has been used variables and methods?
First of all, final is a non-access modifier applicable only to a variable,
a method or a class. Following are different contexts where final is used.
When a variable is declared with final keyword, its value can't be modified,
essentially, a constant. This also means that you must initialize a final
variable.
22.What is final, finally and finalize?
Final class can't be inherited, final method can't be overridden and final
variable value can't be changed. Finally is used to place important code,
it will be executed whether exception is handled or not. Finalize is used
to perform clean up processing just before object is garbage collected.
Final is a keyword.

23.What is a constructor ?
A constructor in Java is a special method that is used to initialize objects.
The constructor is called when an object of a class is created.
24.Can we have multiple constructors in a class?
Y
25.If we don't have a constructor declared, what is called during the object creation?
default constructor.
26.What is "this" keyword in java ?
The this keyword refers to the current object in a method or constructor.
The most common use of the this keyword is to eliminate the confusion between
class attributes and parameters with the same name (because a class attribute
is shadowed by a method or constructor parameter).
27.What is "super" keyword in java? How many possible way can you use?
super can be used to refer immediate parent class instance variable. super
can be used to invoke immediate parent class method. super() can be used to
invoke immediate parent class constructor.
28.What is JVM stand for ?
The Java Virtual Machine is a program whose purpose is to execute other
programs.
29.Is JVM platform independent?
Every system has its own JVM which gets installed automatically when the jdk
software is installed. ... An important point to be noted is that while JAVA
is platform-independent language, the JVM is platform-dependent. Different
JVM is designed for different OS and byte code is able to run on different
OS.
30.What version of java are you using?
1.8
31.What is JAR stand for ?
JAR stands for Java ARchive. It's a file format based on the popular ZIP
file format and is used for aggregating many files into one.
32.What is the difference between JDK and JVM?
JDK – Java Development Kit (in short JDK) is Kit which provides the
environment to develop and execute(run) the Java program. JDK is a
kit(or package) which includes two things
Development Tools(to provide an environment to develop your java programs)
JRE (to execute your java program).
Note : JDK is only used by Java Developers.

JRE – Java Runtime Environment (to say JRE) is an installation package
which provides environment to only run(not develop) the java program(or
application)onto your machine. JRE is only used by them who only wants
to run the Java Programs i.e. end users of your system.
JVM – Java Virtual machine(JVM) is a very important part of both JDK
and JRE because it is contained or inbuilt in both. Whatever Java program
you run using JRE or JDK goes into JVM and JVM is responsible for executing
the java program line by line hence it is also known as interpreter.

33.What is the difference between JVM and JRE?
Answered in 32.
34.what is compile time and run time in java
Runtime and compile time are programming terms that refer to different
stages of software program development. Compile-time is the instance where
the code you entered is converted to executable while Run-time is the
instance where the executable is running.
35.What is heap?
The Java heap is the amount of memory allocated to applications running in
the JVM. Objects in heap memory can be shared between threads. The practical
limit for Java heap size is typically about 2-8 GB in a conventional JVM due
to garbage collection pauses.
36.How java manage it's memory?
In Java, memory management is the process of allocation and de-allocation of
objects, called Memory management. Java does memory management automatically.
Java uses an automatic memory management system called a garbage collector.
Thus, we are not required to implement memory management logic in our
application.
37.What is the difference between String, StringBuffer and StringBuilder?
Objects of String are immutable, and objects of StringBuffer and StringBuilder are mutable.
StringBuffer and StringBuilder are similar, but StringBuilder is faster and
preferred over StringBuffer for single threaded program. If thread safety is
needed, then StringBuffer is used.
38.What is Singleton class?
In object-oriented programming, a singleton class is a class that can have only one
object (an instance of the class) at a time. ... To design a singleton class:
 Make constructor as private. Write a static method that has return type
 object of this singleton class
39.What is Serialization and Deserialization?
Serialization in Java is a mechanism of writing the state of an object into a
byte-stream. It is mainly used in Hibernate, RMI, JPA, EJB and JMS
technologies.

The reverse operation of serialization is called deserialization where
byte-stream is converted into an object.
40.when to use transient variable in java?
transient is a variables modifier used in serialization. At the time
of serialization, if we don't want to save value of a particular
variable in a file, then we use transient keyword. When JVM comes
across transient keyword, it ignores original value of the variable
and save default value of that variable data type.
41.Difference between while and do..while loop?
the main difference between a while loop and do while loop is that
while loop check condition before iteration of the loop. On the other
hand, the do-while loop verifies the condition after the execution of
the statements inside the loop.
42.What is Enum?
An enum is a special "class" that represents a group of constants
(unchangeable variables, like final variables). To create an enum ,
use the enum keyword (instead of class or interface), and separate
the constants with a comma.
43.What is Iterator?
An Iterator is an object that can be used to loop through collections,
like ArrayList and HashSet. It is called an "iterator" because "iterating"
is the technical term for looping. To use an Iterator, you must import it
from the java.
44.Which one will take more memory, an int or Integer?
int is a primitive data type which takes 32 bits(4 bytes) to store.
When your Java code uses the new operator to create an instance of a Java
object, much more data is allocated than you might expect. ... Integer is
an object which takes 128 bits (16 bytes) to store int value.
45.Why is String Immutable in Java?
The string is Immutable in Java because String objects are cached in String
pool. ... Since Strings are very popular as HashMap key, it's important for
them to be immutable so that they can retrieve the value object which was
stored in HashMap.
46.What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another
constructor with respect to current object. Constructor chaining can be done
in two ways: Within same class: It can be done using this() keyword for
constructors in same class.
47.The difference between Serial and Parallel Garbage Collector?
a serial collector is a default copying collector which uses only one GC
thread for the GC operation, while a parallel collector uses multiple GC
threads for the GC operation.
48.What is JIT stands for?
The Just-In-Time (JIT) compiler is a component of the runtime environment
that improves the performance of Java™ applications by compiling bytecodes
to native machine code at run time.
49.Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap. The heap is created when
the JVM starts up and may increase or decrease in size while the application
runs. When the heap becomes full, garbage is collected. During the garbage
collection objects that are no longer used are cleared, thus making space
for new objects.
50.Can you guarantee the garbage collection process?
It is possible to include a hint in the code to run the garbage collector
with the System. gc() or Runtime. gc() methods, but they provide no guarantee
that the garbage collector will actually run. The best approach to tuning
Java garbage collection is setting flags on the JVM.
51.What is the difference between stack and heap in Java?
ava Heap Space is used throughout the application, but Stack is only used
for the method — or methods — currently running. The Heap Space contains
all objects are created, but Stack contains any reference to those objects.
Objects stored in the Heap can be accessed throughout the application.
52.What is reflection in java and why is it useful?
Java Reflection makes it possible to inspect classes, interfaces, fields
and methods at runtime, without knowing the names of the classes, methods
etc. at compile time. It is also possible to instantiate new objects,
invoke methods and get/set field values using reflection.
53.what is multithreading in java?
Multithreading is a Java feature that allows concurrent execution of two
or more parts of a program for maximum utilization of CPU. Each part of
such program is called a thread. So, threads are light-weight processes
within a process.
54.What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access
to a shared resource with multiple threads in Java. Synchronization in Java
guarantees that no two threads can execute a synchronized method which
requires the same lock simultaneously or concurrently.
55.What is Framework?
Frameworks are large bodies (usually many classes) of prewritten code to
which you add your own code to solve a problem in a specific domain. Perhaps
you could say that the framework uses your code because it is usually the
framework that is in control. You make use of a framework by calling its
methods, inheritance, and supplying "callbacks", listeners, or other
implementations of the Observer pattern
56.What are the testing Framework available in java?
TestNG. ...
JUnit. ...
57.Difference between jUnit and testNG?
Both Testng and Junit are Testing framework used for Unit Testing.
TestNG is similar to JUnit. Few more functionalities are added to it
that makes TestNG more powerful than JUnit.
58.What are the dependencies for this project?
Dependencies are the relationships of the preceding tasks to the succeeding
tasks. Tasks may have multiple preceding tasks and multiple succeeding tasks.
The most common dependency relationship is a finish-to-start relationship.
Task P (predecessor) must be finished before task S (successor) can start.
59.what is dependency injection in java?
Dependency injection (DI) is the concept in which objects get other required
objects from outside. ... The general concept behind dependency injection is
called Inversion of Control. A Java class has a dependency on another class,
if it uses an instance of this class. We call this a class dependency.
60.What is static binding and dynamic binding?
Static binding happens at compile-time while dynamic binding happens at
runtime. Binding of private, static and final methods always happen at
compile time since these methods cannot be overridden. ... The binding of
overloaded methods is static and the binding of overridden methods is dynamic.
61.What is Collections Framework?
The Java Collections Framework is a collection of interfaces and classes
which helps in storing and processing the data efficiently. This framework
has several useful classes which have tons of useful functions which makes
a programmer task super easy. I have written several tutorials on Collections
in Java. All the tutorials are shared with examples and source codes to help you understand better.
62.What is Collection and Collections?
Collection is an interface in the java collection framework. It is divided
into two parts −

Java util collection - It contains classes such as Set , queue , List and
etc.
Java util map - It contains classes such as Map , sortedMap and etc.
On the other hand , Collections is the one the utility class. Main purpose
of this class is to provide convenience method to the developers. This
class has only static methods that operate on and return collection. The
methods of this class all throw a NullPointerException if the collections
or class objects provided to them are null.
63.Explain what is main method?
Java main method is the entry point of any java program. Its syntax is
always public static void main(String[] args) . You can only change the
name of String array argument, for example you can change args to
myStringArgs . Also String array argument can be written as String...
64.What is StringBuffer and String Builder?
StringBuffer is synchronized i.e. thread safe. It means two threads can't
call the methods of StringBuffer simultaneously. StringBuilder is
non-synchronized i.e. not thread safe. It means two threads can call the
methods of StringBuilder simultaneously.
65.What do you understand by Thread Safe?
In the simplest of terms threadsafe means that it is safe to be accessed
from multiple threads. When you are using multiple threads in a program
and they are each attempting to access a common data structure or location
in memory several bad things can happen. So, you add some extra code to
prevent those bad things.

66.What are the latest changes in Java 8?
Among the major changes, the following are the notable features that were added to this release.
Java Date Time API.
Collection API improvements.
Concurrency API improvements.
Java IO improvements.
Nashorn JavaScript engine.
Base64 Encode Decode.
Miscellaneous Core API improvements.
67.What do you understand by default method in Java?
The default methods were introduced to provide backward compatibility so
that existing interfaces can use the lambda expressions without implementing
the methods in the implementation class. Default methods are also known as
defender methods or virtual extension methods.










